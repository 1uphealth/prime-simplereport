package gov.cdc.usds.simplereport.service;

import java.util.Optional;

import javax.transaction.Transactional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Service;

import gov.cdc.usds.simplereport.db.model.ApiUser;
import gov.cdc.usds.simplereport.db.model.Organization;
import gov.cdc.usds.simplereport.db.model.Person;
import gov.cdc.usds.simplereport.db.repository.ApiUserRepository;
import gov.cdc.usds.simplereport.db.repository.PersonRepository;

@Service
@Transactional
public class ApiUserService {

	private static final Logger LOG = LoggerFactory.getLogger(ApiUserService.class);

	private PersonRepository _personRepo;
	private ApiUserRepository _apiUserRepo;
	private OrganizationService _orgService;

	public static final PersonClaims FAKE_USER = new PersonClaims("bob@example.com", "Bobbity", "Bob", "Bobberoo", null);
	
	public ApiUserService(PersonRepository personRepo, ApiUserRepository apiUserRepo,
			OrganizationService orgService) {
		_personRepo = personRepo;
		_apiUserRepo = apiUserRepo;
		_orgService = orgService;
	}

	public ApiUser getCurrentUser() {
		PersonClaims currentPersonClaims = FAKE_USER;
		Optional<ApiUser> found = _apiUserRepo.findByLoginEmail(currentPersonClaims.email);
		ApiUser saved;
		if (found.isPresent()) {
			ApiUser user = found.get();
			user.updateLastSeen();
			saved = _apiUserRepo.save(user);
		} else {
			LOG.info("First log-in for user {}:  creating database records", currentPersonClaims.email);
			Organization org = _orgService.getCurrentOrganization();
			Person authPerson = _personRepo.save(currentPersonClaims.toPerson(org));
			saved = _apiUserRepo.save(new ApiUser(authPerson));
		}
		return saved;
	}

	private static class PersonClaims {
		private String email;
		private String firstName;
		private String lastName;
		private String middleName;
		private String suffix;

		public PersonClaims(String email, String firstName, String lastName, String middleName, String suffix) {
			this.email = email;
			this.firstName = firstName;
			this.lastName = lastName;
			this.middleName = middleName;
			this.suffix = suffix;
		}

		public Person toPerson(Organization org) {
			return Person.autogeneratedPerson(firstName, middleName, lastName, suffix, email, org);
		}
		
	}
}
