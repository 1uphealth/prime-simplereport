name: Smoke Test Back-end API

# Run this on pushes to any branch that change a backend file or the workflow definition
on:
  workflow_dispatch: # because sometimes you just want to force a branch to have tests run
  push:
    branches: "**"
    paths:
      - "backend/**"
      - .github/workflows/smoketestBackend.yml

defaults:
  run:
    working-directory: backend

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      test-db:
        image: postgres:12-alpine
        env:
          POSTGRES_PASSWORD: this_is_a_super_secure_admin_password
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Java Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Set up postgresql sidecar
        env:
          PGHOST: localhost
          PGPASSFILE: db-setup/.pgpass_ci
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          LIB_DIR: db-setup
        run: |
          chmod 0600 $PGPASSFILE
          db-setup/create-db.sh
      - name: Run Java Tests
        run: ./gradlew test
      - name: Archive Test Results
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: test-report
          path: backend/build/reports/tests/test
          retention-days: 7
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Java Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Run Java Build
        run: ./gradlew assemble
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Java Dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ hashFiles('*.gradle', 'gradle/dependency-locks/*') }}
      - name: Run Checkstyle
        run: ./gradlew checkstyleMain
  schema-check:
    strategy:
      matrix:
        node: [14]
        os: [ubuntu-20.04]
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{matrix.node}}
        uses: actions/setup-node@v1
        with:
          node-version: ${{matrix.node}}
      - name: Cache npm local files
        uses: actions/cache@v2
        with:
          path: |
            ~/.npm
            ./frontend/node_modules
          key: npm-${{matrix.node}}-${{ hashFiles('frontend/package-lock.json', 'frontend/package.json') }}
      - name: Node setup
        working-directory: ./frontend
        run: npm install
      - name: Lint front-end code with eslint to check graphql queries
        working-directory: ./frontend
        run: npm run-script lint:eslint
